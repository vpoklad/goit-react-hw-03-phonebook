{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactsForm/ContactsForm.module.css","components/ContactsForm/ContactsForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/ContactList/Filter.js","App.js","index.js"],"names":["module","exports","ContactsForm","state","name","number","contact","resetForm","setState","handleInput","e","target","value","handleSubmit","preventDefault","id","uuid","props","addNewContact","this","className","s","form","onSubmit","label","htmlFor","onChange","type","pattern","title","required","Button","variant","size","endIcon","Component","ContactItem","handleDelItem","item","IconButton","onClick","ContactList","contacts","map","Filter","handlChange","TextField","App","filter","onSubmitForm","some","el","toLowerCase","alert","prev","handlFilterChange","filterContacts","toLocaleLowerCase","includes","data","localStorage","getItem","parsedData","JSON","parse","prevPropos","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c673625.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__uArFQ\",\"item\":\"ContactList_item__kuyzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3bvvT\",\"label\":\"ContactsForm_label__20R2E\"};","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport s from './ContactsForm.module.css';\r\n\r\nexport default class ContactsForm extends Component {\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    contact: null,\r\n  };\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  handleInput = e => {\r\n    const name = e.target.name;\r\n    this.setState({ [name]: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState({ contact });\r\n    this.resetForm();\r\n    this.props.addNewContact(contact);\r\n  };\r\n  render() {\r\n    const { handleSubmit, handleInput } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            onChange={handleInput}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"number\" className={s.label}>\r\n          Number\r\n          <input\r\n            onChange={handleInput}\r\n            id=\"number\"\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          size=\"small\"\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Add contact\r\n        </Button>\r\n        {/* <button type=\"submit\">Add contact</button> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nexport default function ContactItem({ contact, handleDelItem }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span>\r\n        {contact.name}: <span>{contact.number}</span>\r\n      </span>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        id={contact.id}\r\n        onClick={() => handleDelItem(contact.id)}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n}\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  handleDelItem: PropTypes.func,\r\n};\r\n","import ContactItem from './ContactItem';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nexport default function ContactList({ contacts, handleDelItem }) {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <ul>\r\n        {contacts.map(contact => (\r\n          <ContactItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            handleDelItem={handleDelItem}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  handleDelItem: PropTypes.func,\r\n};\r\n","import TextField from '@mui/material/TextField';\r\nimport PropTypes from 'prop-types';\r\nexport default function Filter({ value = ' ', handlChange }) {\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Find contacts by name\"\r\n        type=\"search\"\r\n        variant=\"standard\"\r\n        value={value}\r\n        onChange={handlChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  handlChange: PropTypes.func,\r\n};\r\n","// import './App.css';\r\n\r\nimport { Component } from 'react/cjs/react.production.min';\r\n// import { v4 as uuid } from 'uuid';\r\n\r\nimport ContactsForm from './components/ContactsForm/ContactsForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/ContactList/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const data = localStorage.getItem('contacts');\r\n    const parsedData = JSON.parse(data);\r\n    if (parsedData) {\r\n      this.setState({ contacts: parsedData });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevPropos, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  onSubmitForm = contact => {\r\n    const existContact = this.state.contacts.some(\r\n      el => el.name.toLowerCase() === contact.name.toLowerCase(),\r\n    );\r\n    if (existContact) {\r\n      return alert(`this contact already exists`);\r\n    } else {\r\n      this.setState(prev => {\r\n        return {\r\n          contacts: [...prev.contacts, contact],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  handlFilterChange = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n  handleDelItem = id => {\r\n    this.setState(prev => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n  render() {\r\n    const { onSubmitForm, handlFilterChange, filterContacts, handleDelItem } =\r\n      this;\r\n    return (\r\n      <div className=\"app\">\r\n        <h1 className=\"appTitle\">Phonebook</h1>\r\n        <ContactsForm addNewContact={onSubmitForm} />\r\n        <Filter value={this.state.filter} handlChange={handlFilterChange} />\r\n        <ContactList\r\n          contacts={filterContacts()}\r\n          handleDelItem={handleDelItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}